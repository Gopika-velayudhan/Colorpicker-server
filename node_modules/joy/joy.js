/*
 * Generates and returns a validation function from a schema.
 */
function joy(schema) {
  if (typeof schema === 'function') {
    return schema
  }

  if (Array.isArray(schema)) {
    if (schema.length !== 1) {
      throw new Error('schema array must contain exactly one element')
    }

    var validate = joy(schema[0])

    return function (input) {
      if (!Array.isArray(input)) {
        throw new Error('expected array, got ' + typeof input)
      }

      return input.map(validate)
    }
  }

  var keys = Object.keys(schema)
    , validators = {}

  if (keys.length === 0) {
    throw new Error('no keys in schema object')
  }

  keys.forEach(function (key) {
    validators[key] = joy(schema[key])
  })

  return function (input) {
    return keys.reduce(function (validated, key) {
      validated[key] = validators[key](input[key])
      return validated
    }, {})
  }
}

module.exports = joy
